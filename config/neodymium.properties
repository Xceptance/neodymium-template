neodymium.url = ${neodymium.url.protocol}://${neodymium.url.host}${neodymium.url.path}
neodymium.url.protocol = https
# url.host = comes from credentials 
neodymium.url.host = www.xceptance.com
neodymium.url.path = ${neodymium.url.port}/${neodymium.url.site}/
neodymium.url.port = :443

neodymium.url.site = en
neodymium.locale = en_US

neodymium.debugUtils.highlight = true
neodymium.debugUtils.highlight.duration = 100

################################################################################

## The path to the driver server executable, if the respective driver requires
## one. If you do not specify a path, the driver server must be in your PATH.
#neodymium.webDriver.chrome.pathToDriverServer =  C:/dev/webdriver/chromedriver.exe
#neodymium.webDriver.edge.pathToDriverServer = c:/path/to/MicrosoftWebDriver.exe
#neodymium.webDriver.firefox.pathToDriverServer = C:/dev/webdriver/geckodriver.exe
#neodymium.webDriver.ie.pathToDriverServer = c:/path/to/IEDriverServer.exe
#neodymium.webDriver.opera.pathToDriverServer = /path/to/operadriver
#neodymium.webDriver.phantomjs.pathToDriverServer = /path/to/phantomjs

## The path to the browser executable to use. Specify the path in case you
## don't want to use the default browser executable, but an alternative version.
#neodymium.webDriver.chrome.pathToBrowser = /path/to/google-chrome
#neodymium.webDriver.firefox.pathToBrowser = /Applications/Firefoxes/FirefoxDeveloperEdition.app/Contents/MacOS/firefox-bin
#neodymium.webDriver.opera.pathToBrowser = /path/to/opera

## Whether to run Firefox webdrivers in "legacy" mode
## which means that an add-on is used to drive the browser instead of GeckoDriver.
## Note: The legacy mode does not work with Firefox 48+. Use Firefox 45 ESR
neodymium.webDriver.firefox.legacyMode = false

## The desired dimension of the browser window. If not specified, the driver's
## defaults will be used.
#neodymium.webDriver.window.width = 1200
#neodymium.webDriver.window.height = 900

## Whether to use a single driver instance for all tests (defaults to false).
neodymium.webDriver.reuseDriver = false

## Whether to keep browser open after test has finished
## If keepBrowserOpenOnFailure and keepBrowserOpen are both true, the browser only stays open if the test fails
#  Warning: The webdriver process might stay alive even if you close the browser afterwards
neodymium.webDriver.keepBrowserOpen = false

## Whether to keep the browser instance open only if the test fails
## If keepBrowserOpenOnFailure and keepBrowserOpen are both true, the browser only stays open if the test fails
#  Warning: The webdriver process might stay alive even if you close the browser afterwards
neodymium.webDriver.keepBrowserOpenOnFailure = false

# If true: only tests of a test class annotated with the @WorkInProgress annotation are executed
# If false: all tests of a test class are executed
neodymium.workInProgress = false

#############################
#
# Proxy configuration properties
#
#############################
# HTTP proxy settings. Specify host and port of the proxy server and whether it should be used at all.
# If the proxy requires user authentication, make sure to provide the credentials needed.
# You may also configure a comma separated list of hosts that can be used directly, thus bypassing the proxy. 
# Note that the host definitions are interpreted as regular expressions so ensure proper use of escape characters.
#
# Decide whether or not a proxy is used
# neodymium.proxy = false
#
# The host of the proxy 
# neodymium.proxy.host = 127.0.0.1
#
# The host of the proxy 
# neodymium.proxy.port = 8888
#
# The host of the proxy 
# neodymium.proxy.bypassForHosts = localhost,127\\.0\\.0\\.1,^192[.]168
#
# The socket username of the proxy 
# neodymium.proxy.socket.userName =
#
# The socket password of the proxy 
# neodymium.proxy.socket.password = 
#
# The socket version of the proxy 
# neodymium.proxy.socket.version = 